// -------------------------------------------------------------
//
// Module: Hilbert
// Generated by MATLAB(R) 9.4 and Filter Design HDL Coder 3.1.3.
// Generated on: 2018-10-08 20:39:56
// -------------------------------------------------------------

// -------------------------------------------------------------
// HDL Code Generation Options:
//
// OptimizeForHDL: on
// EDAScriptGeneration: off
// Name: Hilbert
// SerialPartition: 100
// TargetLanguage: Verilog
// TestBenchName: Hilbert_tb
// TestBenchStimulus: impulse step ramp chirp noise 
// GenerateHDLTestBench: off

// Filter Specifications:
//
// Sample Rate      : N/A (normalized frequency)
// Response         : Hilbert Transformer
// Specification    : N,TW
// Transition Width : 0.05
// Filter Order     : 200
// -------------------------------------------------------------

// -------------------------------------------------------------
// HDL Implementation    : Fully Serial
// Folding Factor        : 100
// -------------------------------------------------------------
// Filter Settings:
//
// Discrete-Time FIR Filter (real)
// -------------------------------
// Filter Structure  : Direct-Form FIR
// Filter Length     : 201
// Stable            : Yes
// Linear Phase      : Yes (Type 3)
// Arithmetic        : fixed
// Numerator         : s16,15 -> [-1 1)
// Input             : s16,15 -> [-1 1)
// Filter Internals  : Specify Precision
//   Output          : s16,15 -> [-1 1)
//   Product         : s32,29 -> [-4 4)
//   Accumulator     : s40,29 -> [-1024 1024)
//   Round Mode      : convergent
//   Overflow Mode   : wrap
// -------------------------------------------------------------




`timescale 1 ns / 1 ns

module Hilbert
               (
                clk,
                clk_enable,
                reset,
                filter_in,
                filter_out
                );

  input   clk; 
  input   clk_enable; 
  input   reset; 
  input   signed [15:0] filter_in; //sfix16_En15
  output  signed [15:0] filter_out; //sfix16_En15

////////////////////////////////////////////////////////////////
//Module Architecture: Hilbert
////////////////////////////////////////////////////////////////
  // Local Functions
  // Type Definitions
  // Constants
  parameter signed [15:0] coeff1 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff2 = 16'b1111111111111101; //sfix16_En15
  parameter signed [15:0] coeff3 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff4 = 16'b1111111111111110; //sfix16_En15
  parameter signed [15:0] coeff5 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff6 = 16'b1111111111111101; //sfix16_En15
  parameter signed [15:0] coeff7 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff8 = 16'b1111111111111100; //sfix16_En15
  parameter signed [15:0] coeff9 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff10 = 16'b1111111111111011; //sfix16_En15
  parameter signed [15:0] coeff11 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff12 = 16'b1111111111111001; //sfix16_En15
  parameter signed [15:0] coeff13 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff14 = 16'b1111111111110111; //sfix16_En15
  parameter signed [15:0] coeff15 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff16 = 16'b1111111111110101; //sfix16_En15
  parameter signed [15:0] coeff17 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff18 = 16'b1111111111110011; //sfix16_En15
  parameter signed [15:0] coeff19 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff20 = 16'b1111111111110000; //sfix16_En15
  parameter signed [15:0] coeff21 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff22 = 16'b1111111111101100; //sfix16_En15
  parameter signed [15:0] coeff23 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff24 = 16'b1111111111101000; //sfix16_En15
  parameter signed [15:0] coeff25 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff26 = 16'b1111111111100100; //sfix16_En15
  parameter signed [15:0] coeff27 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff28 = 16'b1111111111011110; //sfix16_En15
  parameter signed [15:0] coeff29 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff30 = 16'b1111111111011000; //sfix16_En15
  parameter signed [15:0] coeff31 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff32 = 16'b1111111111010010; //sfix16_En15
  parameter signed [15:0] coeff33 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff34 = 16'b1111111111001010; //sfix16_En15
  parameter signed [15:0] coeff35 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff36 = 16'b1111111111000010; //sfix16_En15
  parameter signed [15:0] coeff37 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff38 = 16'b1111111110111000; //sfix16_En15
  parameter signed [15:0] coeff39 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff40 = 16'b1111111110101101; //sfix16_En15
  parameter signed [15:0] coeff41 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff42 = 16'b1111111110100010; //sfix16_En15
  parameter signed [15:0] coeff43 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff44 = 16'b1111111110010100; //sfix16_En15
  parameter signed [15:0] coeff45 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff46 = 16'b1111111110000110; //sfix16_En15
  parameter signed [15:0] coeff47 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff48 = 16'b1111111101110110; //sfix16_En15
  parameter signed [15:0] coeff49 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff50 = 16'b1111111101100100; //sfix16_En15
  parameter signed [15:0] coeff51 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff52 = 16'b1111111101010000; //sfix16_En15
  parameter signed [15:0] coeff53 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff54 = 16'b1111111100111011; //sfix16_En15
  parameter signed [15:0] coeff55 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff56 = 16'b1111111100100011; //sfix16_En15
  parameter signed [15:0] coeff57 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff58 = 16'b1111111100001000; //sfix16_En15
  parameter signed [15:0] coeff59 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff60 = 16'b1111111011101011; //sfix16_En15
  parameter signed [15:0] coeff61 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff62 = 16'b1111111011001011; //sfix16_En15
  parameter signed [15:0] coeff63 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff64 = 16'b1111111010100111; //sfix16_En15
  parameter signed [15:0] coeff65 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff66 = 16'b1111111010000000; //sfix16_En15
  parameter signed [15:0] coeff67 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff68 = 16'b1111111001010011; //sfix16_En15
  parameter signed [15:0] coeff69 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff70 = 16'b1111111000100010; //sfix16_En15
  parameter signed [15:0] coeff71 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff72 = 16'b1111110111101010; //sfix16_En15
  parameter signed [15:0] coeff73 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff74 = 16'b1111110110101011; //sfix16_En15
  parameter signed [15:0] coeff75 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff76 = 16'b1111110101100011; //sfix16_En15
  parameter signed [15:0] coeff77 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff78 = 16'b1111110100001111; //sfix16_En15
  parameter signed [15:0] coeff79 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff80 = 16'b1111110010101101; //sfix16_En15
  parameter signed [15:0] coeff81 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff82 = 16'b1111110000111001; //sfix16_En15
  parameter signed [15:0] coeff83 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff84 = 16'b1111101110101011; //sfix16_En15
  parameter signed [15:0] coeff85 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff86 = 16'b1111101011111011; //sfix16_En15
  parameter signed [15:0] coeff87 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff88 = 16'b1111101000010111; //sfix16_En15
  parameter signed [15:0] coeff89 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff90 = 16'b1111100011100110; //sfix16_En15
  parameter signed [15:0] coeff91 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff92 = 16'b1111011100110011; //sfix16_En15
  parameter signed [15:0] coeff93 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff94 = 16'b1111010010001110; //sfix16_En15
  parameter signed [15:0] coeff95 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff96 = 16'b1110111111011000; //sfix16_En15
  parameter signed [15:0] coeff97 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff98 = 16'b1110010011101100; //sfix16_En15
  parameter signed [15:0] coeff99 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff100 = 16'b1010111010001011; //sfix16_En15
  parameter signed [15:0] coeff101 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff102 = 16'b0101000101110101; //sfix16_En15
  parameter signed [15:0] coeff103 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff104 = 16'b0001101100010100; //sfix16_En15
  parameter signed [15:0] coeff105 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff106 = 16'b0001000000101000; //sfix16_En15
  parameter signed [15:0] coeff107 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff108 = 16'b0000101101110010; //sfix16_En15
  parameter signed [15:0] coeff109 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff110 = 16'b0000100011001101; //sfix16_En15
  parameter signed [15:0] coeff111 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff112 = 16'b0000011100011010; //sfix16_En15
  parameter signed [15:0] coeff113 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff114 = 16'b0000010111101001; //sfix16_En15
  parameter signed [15:0] coeff115 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff116 = 16'b0000010100000101; //sfix16_En15
  parameter signed [15:0] coeff117 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff118 = 16'b0000010001010101; //sfix16_En15
  parameter signed [15:0] coeff119 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff120 = 16'b0000001111000111; //sfix16_En15
  parameter signed [15:0] coeff121 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff122 = 16'b0000001101010011; //sfix16_En15
  parameter signed [15:0] coeff123 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff124 = 16'b0000001011110001; //sfix16_En15
  parameter signed [15:0] coeff125 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff126 = 16'b0000001010011101; //sfix16_En15
  parameter signed [15:0] coeff127 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff128 = 16'b0000001001010101; //sfix16_En15
  parameter signed [15:0] coeff129 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff130 = 16'b0000001000010110; //sfix16_En15
  parameter signed [15:0] coeff131 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff132 = 16'b0000000111011110; //sfix16_En15
  parameter signed [15:0] coeff133 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff134 = 16'b0000000110101101; //sfix16_En15
  parameter signed [15:0] coeff135 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff136 = 16'b0000000110000000; //sfix16_En15
  parameter signed [15:0] coeff137 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff138 = 16'b0000000101011001; //sfix16_En15
  parameter signed [15:0] coeff139 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff140 = 16'b0000000100110101; //sfix16_En15
  parameter signed [15:0] coeff141 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff142 = 16'b0000000100010101; //sfix16_En15
  parameter signed [15:0] coeff143 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff144 = 16'b0000000011111000; //sfix16_En15
  parameter signed [15:0] coeff145 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff146 = 16'b0000000011011101; //sfix16_En15
  parameter signed [15:0] coeff147 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff148 = 16'b0000000011000101; //sfix16_En15
  parameter signed [15:0] coeff149 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff150 = 16'b0000000010110000; //sfix16_En15
  parameter signed [15:0] coeff151 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff152 = 16'b0000000010011100; //sfix16_En15
  parameter signed [15:0] coeff153 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff154 = 16'b0000000010001010; //sfix16_En15
  parameter signed [15:0] coeff155 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff156 = 16'b0000000001111010; //sfix16_En15
  parameter signed [15:0] coeff157 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff158 = 16'b0000000001101100; //sfix16_En15
  parameter signed [15:0] coeff159 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff160 = 16'b0000000001011110; //sfix16_En15
  parameter signed [15:0] coeff161 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff162 = 16'b0000000001010011; //sfix16_En15
  parameter signed [15:0] coeff163 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff164 = 16'b0000000001001000; //sfix16_En15
  parameter signed [15:0] coeff165 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff166 = 16'b0000000000111110; //sfix16_En15
  parameter signed [15:0] coeff167 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff168 = 16'b0000000000110110; //sfix16_En15
  parameter signed [15:0] coeff169 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff170 = 16'b0000000000101110; //sfix16_En15
  parameter signed [15:0] coeff171 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff172 = 16'b0000000000101000; //sfix16_En15
  parameter signed [15:0] coeff173 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff174 = 16'b0000000000100010; //sfix16_En15
  parameter signed [15:0] coeff175 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff176 = 16'b0000000000011100; //sfix16_En15
  parameter signed [15:0] coeff177 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff178 = 16'b0000000000011000; //sfix16_En15
  parameter signed [15:0] coeff179 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff180 = 16'b0000000000010100; //sfix16_En15
  parameter signed [15:0] coeff181 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff182 = 16'b0000000000010000; //sfix16_En15
  parameter signed [15:0] coeff183 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff184 = 16'b0000000000001101; //sfix16_En15
  parameter signed [15:0] coeff185 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff186 = 16'b0000000000001011; //sfix16_En15
  parameter signed [15:0] coeff187 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff188 = 16'b0000000000001001; //sfix16_En15
  parameter signed [15:0] coeff189 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff190 = 16'b0000000000000111; //sfix16_En15
  parameter signed [15:0] coeff191 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff192 = 16'b0000000000000101; //sfix16_En15
  parameter signed [15:0] coeff193 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff194 = 16'b0000000000000100; //sfix16_En15
  parameter signed [15:0] coeff195 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff196 = 16'b0000000000000011; //sfix16_En15
  parameter signed [15:0] coeff197 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff198 = 16'b0000000000000010; //sfix16_En15
  parameter signed [15:0] coeff199 = 16'b0000000000000000; //sfix16_En15
  parameter signed [15:0] coeff200 = 16'b0000000000000011; //sfix16_En15
  parameter signed [15:0] coeff201 = 16'b0000000000000000; //sfix16_En15

  // Signals
  reg  [6:0] cur_count; // ufix7
  wire phase_99; // boolean
  wire phase_0; // boolean
  reg  signed [15:0] delay_pipeline [0:200] ; // sfix16_En15
  wire signed [15:0] inputmux_1; // sfix16_En15
  reg  signed [39:0] acc_final; // sfix40_En29
  reg  signed [39:0] acc_out_1; // sfix40_En29
  wire signed [31:0] product_1; // sfix32_En29
  wire signed [15:0] product_1_mux; // sfix16_En15
  wire signed [31:0] mul_temp; // sfix32_En30
  wire signed [39:0] prod_typeconvert_1; // sfix40_En29
  wire signed [39:0] acc_sum_1; // sfix40_En29
  wire signed [39:0] acc_in_1; // sfix40_En29
  wire signed [39:0] add_signext; // sfix40_En29
  wire signed [39:0] add_signext_1; // sfix40_En29
  wire signed [40:0] add_temp; // sfix41_En29
  wire signed [15:0] output_typeconvert; // sfix16_En15
  reg  signed [15:0] output_register; // sfix16_En15

  // Block Statements
  always @ (posedge clk or posedge reset)
    begin: Counter_process
      if (reset == 1'b1) begin
        cur_count <= 7'b1100011;
      end
      else begin
        if (clk_enable == 1'b1) begin
          if (cur_count >= 7'b1100011) begin
            cur_count <= 7'b0000000;
          end
          else begin
            cur_count <= cur_count + 7'b0000001;
          end
        end
      end
    end // Counter_process

  assign  phase_99 = (cur_count == 7'b1100011 && clk_enable == 1'b1) ? 1'b1 : 1'b0;

  assign  phase_0 = (cur_count == 7'b0000000 && clk_enable == 1'b1) ? 1'b1 : 1'b0;

  always @( posedge clk or posedge reset)
    begin: Delay_Pipeline_process
      if (reset == 1'b1) begin
        delay_pipeline[0] <= 0;
        delay_pipeline[1] <= 0;
        delay_pipeline[2] <= 0;
        delay_pipeline[3] <= 0;
        delay_pipeline[4] <= 0;
        delay_pipeline[5] <= 0;
        delay_pipeline[6] <= 0;
        delay_pipeline[7] <= 0;
        delay_pipeline[8] <= 0;
        delay_pipeline[9] <= 0;
        delay_pipeline[10] <= 0;
        delay_pipeline[11] <= 0;
        delay_pipeline[12] <= 0;
        delay_pipeline[13] <= 0;
        delay_pipeline[14] <= 0;
        delay_pipeline[15] <= 0;
        delay_pipeline[16] <= 0;
        delay_pipeline[17] <= 0;
        delay_pipeline[18] <= 0;
        delay_pipeline[19] <= 0;
        delay_pipeline[20] <= 0;
        delay_pipeline[21] <= 0;
        delay_pipeline[22] <= 0;
        delay_pipeline[23] <= 0;
        delay_pipeline[24] <= 0;
        delay_pipeline[25] <= 0;
        delay_pipeline[26] <= 0;
        delay_pipeline[27] <= 0;
        delay_pipeline[28] <= 0;
        delay_pipeline[29] <= 0;
        delay_pipeline[30] <= 0;
        delay_pipeline[31] <= 0;
        delay_pipeline[32] <= 0;
        delay_pipeline[33] <= 0;
        delay_pipeline[34] <= 0;
        delay_pipeline[35] <= 0;
        delay_pipeline[36] <= 0;
        delay_pipeline[37] <= 0;
        delay_pipeline[38] <= 0;
        delay_pipeline[39] <= 0;
        delay_pipeline[40] <= 0;
        delay_pipeline[41] <= 0;
        delay_pipeline[42] <= 0;
        delay_pipeline[43] <= 0;
        delay_pipeline[44] <= 0;
        delay_pipeline[45] <= 0;
        delay_pipeline[46] <= 0;
        delay_pipeline[47] <= 0;
        delay_pipeline[48] <= 0;
        delay_pipeline[49] <= 0;
        delay_pipeline[50] <= 0;
        delay_pipeline[51] <= 0;
        delay_pipeline[52] <= 0;
        delay_pipeline[53] <= 0;
        delay_pipeline[54] <= 0;
        delay_pipeline[55] <= 0;
        delay_pipeline[56] <= 0;
        delay_pipeline[57] <= 0;
        delay_pipeline[58] <= 0;
        delay_pipeline[59] <= 0;
        delay_pipeline[60] <= 0;
        delay_pipeline[61] <= 0;
        delay_pipeline[62] <= 0;
        delay_pipeline[63] <= 0;
        delay_pipeline[64] <= 0;
        delay_pipeline[65] <= 0;
        delay_pipeline[66] <= 0;
        delay_pipeline[67] <= 0;
        delay_pipeline[68] <= 0;
        delay_pipeline[69] <= 0;
        delay_pipeline[70] <= 0;
        delay_pipeline[71] <= 0;
        delay_pipeline[72] <= 0;
        delay_pipeline[73] <= 0;
        delay_pipeline[74] <= 0;
        delay_pipeline[75] <= 0;
        delay_pipeline[76] <= 0;
        delay_pipeline[77] <= 0;
        delay_pipeline[78] <= 0;
        delay_pipeline[79] <= 0;
        delay_pipeline[80] <= 0;
        delay_pipeline[81] <= 0;
        delay_pipeline[82] <= 0;
        delay_pipeline[83] <= 0;
        delay_pipeline[84] <= 0;
        delay_pipeline[85] <= 0;
        delay_pipeline[86] <= 0;
        delay_pipeline[87] <= 0;
        delay_pipeline[88] <= 0;
        delay_pipeline[89] <= 0;
        delay_pipeline[90] <= 0;
        delay_pipeline[91] <= 0;
        delay_pipeline[92] <= 0;
        delay_pipeline[93] <= 0;
        delay_pipeline[94] <= 0;
        delay_pipeline[95] <= 0;
        delay_pipeline[96] <= 0;
        delay_pipeline[97] <= 0;
        delay_pipeline[98] <= 0;
        delay_pipeline[99] <= 0;
        delay_pipeline[100] <= 0;
        delay_pipeline[101] <= 0;
        delay_pipeline[102] <= 0;
        delay_pipeline[103] <= 0;
        delay_pipeline[104] <= 0;
        delay_pipeline[105] <= 0;
        delay_pipeline[106] <= 0;
        delay_pipeline[107] <= 0;
        delay_pipeline[108] <= 0;
        delay_pipeline[109] <= 0;
        delay_pipeline[110] <= 0;
        delay_pipeline[111] <= 0;
        delay_pipeline[112] <= 0;
        delay_pipeline[113] <= 0;
        delay_pipeline[114] <= 0;
        delay_pipeline[115] <= 0;
        delay_pipeline[116] <= 0;
        delay_pipeline[117] <= 0;
        delay_pipeline[118] <= 0;
        delay_pipeline[119] <= 0;
        delay_pipeline[120] <= 0;
        delay_pipeline[121] <= 0;
        delay_pipeline[122] <= 0;
        delay_pipeline[123] <= 0;
        delay_pipeline[124] <= 0;
        delay_pipeline[125] <= 0;
        delay_pipeline[126] <= 0;
        delay_pipeline[127] <= 0;
        delay_pipeline[128] <= 0;
        delay_pipeline[129] <= 0;
        delay_pipeline[130] <= 0;
        delay_pipeline[131] <= 0;
        delay_pipeline[132] <= 0;
        delay_pipeline[133] <= 0;
        delay_pipeline[134] <= 0;
        delay_pipeline[135] <= 0;
        delay_pipeline[136] <= 0;
        delay_pipeline[137] <= 0;
        delay_pipeline[138] <= 0;
        delay_pipeline[139] <= 0;
        delay_pipeline[140] <= 0;
        delay_pipeline[141] <= 0;
        delay_pipeline[142] <= 0;
        delay_pipeline[143] <= 0;
        delay_pipeline[144] <= 0;
        delay_pipeline[145] <= 0;
        delay_pipeline[146] <= 0;
        delay_pipeline[147] <= 0;
        delay_pipeline[148] <= 0;
        delay_pipeline[149] <= 0;
        delay_pipeline[150] <= 0;
        delay_pipeline[151] <= 0;
        delay_pipeline[152] <= 0;
        delay_pipeline[153] <= 0;
        delay_pipeline[154] <= 0;
        delay_pipeline[155] <= 0;
        delay_pipeline[156] <= 0;
        delay_pipeline[157] <= 0;
        delay_pipeline[158] <= 0;
        delay_pipeline[159] <= 0;
        delay_pipeline[160] <= 0;
        delay_pipeline[161] <= 0;
        delay_pipeline[162] <= 0;
        delay_pipeline[163] <= 0;
        delay_pipeline[164] <= 0;
        delay_pipeline[165] <= 0;
        delay_pipeline[166] <= 0;
        delay_pipeline[167] <= 0;
        delay_pipeline[168] <= 0;
        delay_pipeline[169] <= 0;
        delay_pipeline[170] <= 0;
        delay_pipeline[171] <= 0;
        delay_pipeline[172] <= 0;
        delay_pipeline[173] <= 0;
        delay_pipeline[174] <= 0;
        delay_pipeline[175] <= 0;
        delay_pipeline[176] <= 0;
        delay_pipeline[177] <= 0;
        delay_pipeline[178] <= 0;
        delay_pipeline[179] <= 0;
        delay_pipeline[180] <= 0;
        delay_pipeline[181] <= 0;
        delay_pipeline[182] <= 0;
        delay_pipeline[183] <= 0;
        delay_pipeline[184] <= 0;
        delay_pipeline[185] <= 0;
        delay_pipeline[186] <= 0;
        delay_pipeline[187] <= 0;
        delay_pipeline[188] <= 0;
        delay_pipeline[189] <= 0;
        delay_pipeline[190] <= 0;
        delay_pipeline[191] <= 0;
        delay_pipeline[192] <= 0;
        delay_pipeline[193] <= 0;
        delay_pipeline[194] <= 0;
        delay_pipeline[195] <= 0;
        delay_pipeline[196] <= 0;
        delay_pipeline[197] <= 0;
        delay_pipeline[198] <= 0;
        delay_pipeline[199] <= 0;
        delay_pipeline[200] <= 0;
      end
      else begin
        if (phase_99 == 1'b1) begin
          delay_pipeline[0] <= filter_in;
          delay_pipeline[1] <= delay_pipeline[0];
          delay_pipeline[2] <= delay_pipeline[1];
          delay_pipeline[3] <= delay_pipeline[2];
          delay_pipeline[4] <= delay_pipeline[3];
          delay_pipeline[5] <= delay_pipeline[4];
          delay_pipeline[6] <= delay_pipeline[5];
          delay_pipeline[7] <= delay_pipeline[6];
          delay_pipeline[8] <= delay_pipeline[7];
          delay_pipeline[9] <= delay_pipeline[8];
          delay_pipeline[10] <= delay_pipeline[9];
          delay_pipeline[11] <= delay_pipeline[10];
          delay_pipeline[12] <= delay_pipeline[11];
          delay_pipeline[13] <= delay_pipeline[12];
          delay_pipeline[14] <= delay_pipeline[13];
          delay_pipeline[15] <= delay_pipeline[14];
          delay_pipeline[16] <= delay_pipeline[15];
          delay_pipeline[17] <= delay_pipeline[16];
          delay_pipeline[18] <= delay_pipeline[17];
          delay_pipeline[19] <= delay_pipeline[18];
          delay_pipeline[20] <= delay_pipeline[19];
          delay_pipeline[21] <= delay_pipeline[20];
          delay_pipeline[22] <= delay_pipeline[21];
          delay_pipeline[23] <= delay_pipeline[22];
          delay_pipeline[24] <= delay_pipeline[23];
          delay_pipeline[25] <= delay_pipeline[24];
          delay_pipeline[26] <= delay_pipeline[25];
          delay_pipeline[27] <= delay_pipeline[26];
          delay_pipeline[28] <= delay_pipeline[27];
          delay_pipeline[29] <= delay_pipeline[28];
          delay_pipeline[30] <= delay_pipeline[29];
          delay_pipeline[31] <= delay_pipeline[30];
          delay_pipeline[32] <= delay_pipeline[31];
          delay_pipeline[33] <= delay_pipeline[32];
          delay_pipeline[34] <= delay_pipeline[33];
          delay_pipeline[35] <= delay_pipeline[34];
          delay_pipeline[36] <= delay_pipeline[35];
          delay_pipeline[37] <= delay_pipeline[36];
          delay_pipeline[38] <= delay_pipeline[37];
          delay_pipeline[39] <= delay_pipeline[38];
          delay_pipeline[40] <= delay_pipeline[39];
          delay_pipeline[41] <= delay_pipeline[40];
          delay_pipeline[42] <= delay_pipeline[41];
          delay_pipeline[43] <= delay_pipeline[42];
          delay_pipeline[44] <= delay_pipeline[43];
          delay_pipeline[45] <= delay_pipeline[44];
          delay_pipeline[46] <= delay_pipeline[45];
          delay_pipeline[47] <= delay_pipeline[46];
          delay_pipeline[48] <= delay_pipeline[47];
          delay_pipeline[49] <= delay_pipeline[48];
          delay_pipeline[50] <= delay_pipeline[49];
          delay_pipeline[51] <= delay_pipeline[50];
          delay_pipeline[52] <= delay_pipeline[51];
          delay_pipeline[53] <= delay_pipeline[52];
          delay_pipeline[54] <= delay_pipeline[53];
          delay_pipeline[55] <= delay_pipeline[54];
          delay_pipeline[56] <= delay_pipeline[55];
          delay_pipeline[57] <= delay_pipeline[56];
          delay_pipeline[58] <= delay_pipeline[57];
          delay_pipeline[59] <= delay_pipeline[58];
          delay_pipeline[60] <= delay_pipeline[59];
          delay_pipeline[61] <= delay_pipeline[60];
          delay_pipeline[62] <= delay_pipeline[61];
          delay_pipeline[63] <= delay_pipeline[62];
          delay_pipeline[64] <= delay_pipeline[63];
          delay_pipeline[65] <= delay_pipeline[64];
          delay_pipeline[66] <= delay_pipeline[65];
          delay_pipeline[67] <= delay_pipeline[66];
          delay_pipeline[68] <= delay_pipeline[67];
          delay_pipeline[69] <= delay_pipeline[68];
          delay_pipeline[70] <= delay_pipeline[69];
          delay_pipeline[71] <= delay_pipeline[70];
          delay_pipeline[72] <= delay_pipeline[71];
          delay_pipeline[73] <= delay_pipeline[72];
          delay_pipeline[74] <= delay_pipeline[73];
          delay_pipeline[75] <= delay_pipeline[74];
          delay_pipeline[76] <= delay_pipeline[75];
          delay_pipeline[77] <= delay_pipeline[76];
          delay_pipeline[78] <= delay_pipeline[77];
          delay_pipeline[79] <= delay_pipeline[78];
          delay_pipeline[80] <= delay_pipeline[79];
          delay_pipeline[81] <= delay_pipeline[80];
          delay_pipeline[82] <= delay_pipeline[81];
          delay_pipeline[83] <= delay_pipeline[82];
          delay_pipeline[84] <= delay_pipeline[83];
          delay_pipeline[85] <= delay_pipeline[84];
          delay_pipeline[86] <= delay_pipeline[85];
          delay_pipeline[87] <= delay_pipeline[86];
          delay_pipeline[88] <= delay_pipeline[87];
          delay_pipeline[89] <= delay_pipeline[88];
          delay_pipeline[90] <= delay_pipeline[89];
          delay_pipeline[91] <= delay_pipeline[90];
          delay_pipeline[92] <= delay_pipeline[91];
          delay_pipeline[93] <= delay_pipeline[92];
          delay_pipeline[94] <= delay_pipeline[93];
          delay_pipeline[95] <= delay_pipeline[94];
          delay_pipeline[96] <= delay_pipeline[95];
          delay_pipeline[97] <= delay_pipeline[96];
          delay_pipeline[98] <= delay_pipeline[97];
          delay_pipeline[99] <= delay_pipeline[98];
          delay_pipeline[100] <= delay_pipeline[99];
          delay_pipeline[101] <= delay_pipeline[100];
          delay_pipeline[102] <= delay_pipeline[101];
          delay_pipeline[103] <= delay_pipeline[102];
          delay_pipeline[104] <= delay_pipeline[103];
          delay_pipeline[105] <= delay_pipeline[104];
          delay_pipeline[106] <= delay_pipeline[105];
          delay_pipeline[107] <= delay_pipeline[106];
          delay_pipeline[108] <= delay_pipeline[107];
          delay_pipeline[109] <= delay_pipeline[108];
          delay_pipeline[110] <= delay_pipeline[109];
          delay_pipeline[111] <= delay_pipeline[110];
          delay_pipeline[112] <= delay_pipeline[111];
          delay_pipeline[113] <= delay_pipeline[112];
          delay_pipeline[114] <= delay_pipeline[113];
          delay_pipeline[115] <= delay_pipeline[114];
          delay_pipeline[116] <= delay_pipeline[115];
          delay_pipeline[117] <= delay_pipeline[116];
          delay_pipeline[118] <= delay_pipeline[117];
          delay_pipeline[119] <= delay_pipeline[118];
          delay_pipeline[120] <= delay_pipeline[119];
          delay_pipeline[121] <= delay_pipeline[120];
          delay_pipeline[122] <= delay_pipeline[121];
          delay_pipeline[123] <= delay_pipeline[122];
          delay_pipeline[124] <= delay_pipeline[123];
          delay_pipeline[125] <= delay_pipeline[124];
          delay_pipeline[126] <= delay_pipeline[125];
          delay_pipeline[127] <= delay_pipeline[126];
          delay_pipeline[128] <= delay_pipeline[127];
          delay_pipeline[129] <= delay_pipeline[128];
          delay_pipeline[130] <= delay_pipeline[129];
          delay_pipeline[131] <= delay_pipeline[130];
          delay_pipeline[132] <= delay_pipeline[131];
          delay_pipeline[133] <= delay_pipeline[132];
          delay_pipeline[134] <= delay_pipeline[133];
          delay_pipeline[135] <= delay_pipeline[134];
          delay_pipeline[136] <= delay_pipeline[135];
          delay_pipeline[137] <= delay_pipeline[136];
          delay_pipeline[138] <= delay_pipeline[137];
          delay_pipeline[139] <= delay_pipeline[138];
          delay_pipeline[140] <= delay_pipeline[139];
          delay_pipeline[141] <= delay_pipeline[140];
          delay_pipeline[142] <= delay_pipeline[141];
          delay_pipeline[143] <= delay_pipeline[142];
          delay_pipeline[144] <= delay_pipeline[143];
          delay_pipeline[145] <= delay_pipeline[144];
          delay_pipeline[146] <= delay_pipeline[145];
          delay_pipeline[147] <= delay_pipeline[146];
          delay_pipeline[148] <= delay_pipeline[147];
          delay_pipeline[149] <= delay_pipeline[148];
          delay_pipeline[150] <= delay_pipeline[149];
          delay_pipeline[151] <= delay_pipeline[150];
          delay_pipeline[152] <= delay_pipeline[151];
          delay_pipeline[153] <= delay_pipeline[152];
          delay_pipeline[154] <= delay_pipeline[153];
          delay_pipeline[155] <= delay_pipeline[154];
          delay_pipeline[156] <= delay_pipeline[155];
          delay_pipeline[157] <= delay_pipeline[156];
          delay_pipeline[158] <= delay_pipeline[157];
          delay_pipeline[159] <= delay_pipeline[158];
          delay_pipeline[160] <= delay_pipeline[159];
          delay_pipeline[161] <= delay_pipeline[160];
          delay_pipeline[162] <= delay_pipeline[161];
          delay_pipeline[163] <= delay_pipeline[162];
          delay_pipeline[164] <= delay_pipeline[163];
          delay_pipeline[165] <= delay_pipeline[164];
          delay_pipeline[166] <= delay_pipeline[165];
          delay_pipeline[167] <= delay_pipeline[166];
          delay_pipeline[168] <= delay_pipeline[167];
          delay_pipeline[169] <= delay_pipeline[168];
          delay_pipeline[170] <= delay_pipeline[169];
          delay_pipeline[171] <= delay_pipeline[170];
          delay_pipeline[172] <= delay_pipeline[171];
          delay_pipeline[173] <= delay_pipeline[172];
          delay_pipeline[174] <= delay_pipeline[173];
          delay_pipeline[175] <= delay_pipeline[174];
          delay_pipeline[176] <= delay_pipeline[175];
          delay_pipeline[177] <= delay_pipeline[176];
          delay_pipeline[178] <= delay_pipeline[177];
          delay_pipeline[179] <= delay_pipeline[178];
          delay_pipeline[180] <= delay_pipeline[179];
          delay_pipeline[181] <= delay_pipeline[180];
          delay_pipeline[182] <= delay_pipeline[181];
          delay_pipeline[183] <= delay_pipeline[182];
          delay_pipeline[184] <= delay_pipeline[183];
          delay_pipeline[185] <= delay_pipeline[184];
          delay_pipeline[186] <= delay_pipeline[185];
          delay_pipeline[187] <= delay_pipeline[186];
          delay_pipeline[188] <= delay_pipeline[187];
          delay_pipeline[189] <= delay_pipeline[188];
          delay_pipeline[190] <= delay_pipeline[189];
          delay_pipeline[191] <= delay_pipeline[190];
          delay_pipeline[192] <= delay_pipeline[191];
          delay_pipeline[193] <= delay_pipeline[192];
          delay_pipeline[194] <= delay_pipeline[193];
          delay_pipeline[195] <= delay_pipeline[194];
          delay_pipeline[196] <= delay_pipeline[195];
          delay_pipeline[197] <= delay_pipeline[196];
          delay_pipeline[198] <= delay_pipeline[197];
          delay_pipeline[199] <= delay_pipeline[198];
          delay_pipeline[200] <= delay_pipeline[199];
        end
      end
    end // Delay_Pipeline_process


  assign inputmux_1 = (cur_count == 7'b0000000) ? delay_pipeline[1] :
                     (cur_count == 7'b0000001) ? delay_pipeline[3] :
                     (cur_count == 7'b0000010) ? delay_pipeline[5] :
                     (cur_count == 7'b0000011) ? delay_pipeline[7] :
                     (cur_count == 7'b0000100) ? delay_pipeline[9] :
                     (cur_count == 7'b0000101) ? delay_pipeline[11] :
                     (cur_count == 7'b0000110) ? delay_pipeline[13] :
                     (cur_count == 7'b0000111) ? delay_pipeline[15] :
                     (cur_count == 7'b0001000) ? delay_pipeline[17] :
                     (cur_count == 7'b0001001) ? delay_pipeline[19] :
                     (cur_count == 7'b0001010) ? delay_pipeline[21] :
                     (cur_count == 7'b0001011) ? delay_pipeline[23] :
                     (cur_count == 7'b0001100) ? delay_pipeline[25] :
                     (cur_count == 7'b0001101) ? delay_pipeline[27] :
                     (cur_count == 7'b0001110) ? delay_pipeline[29] :
                     (cur_count == 7'b0001111) ? delay_pipeline[31] :
                     (cur_count == 7'b0010000) ? delay_pipeline[33] :
                     (cur_count == 7'b0010001) ? delay_pipeline[35] :
                     (cur_count == 7'b0010010) ? delay_pipeline[37] :
                     (cur_count == 7'b0010011) ? delay_pipeline[39] :
                     (cur_count == 7'b0010100) ? delay_pipeline[41] :
                     (cur_count == 7'b0010101) ? delay_pipeline[43] :
                     (cur_count == 7'b0010110) ? delay_pipeline[45] :
                     (cur_count == 7'b0010111) ? delay_pipeline[47] :
                     (cur_count == 7'b0011000) ? delay_pipeline[49] :
                     (cur_count == 7'b0011001) ? delay_pipeline[51] :
                     (cur_count == 7'b0011010) ? delay_pipeline[53] :
                     (cur_count == 7'b0011011) ? delay_pipeline[55] :
                     (cur_count == 7'b0011100) ? delay_pipeline[57] :
                     (cur_count == 7'b0011101) ? delay_pipeline[59] :
                     (cur_count == 7'b0011110) ? delay_pipeline[61] :
                     (cur_count == 7'b0011111) ? delay_pipeline[63] :
                     (cur_count == 7'b0100000) ? delay_pipeline[65] :
                     (cur_count == 7'b0100001) ? delay_pipeline[67] :
                     (cur_count == 7'b0100010) ? delay_pipeline[69] :
                     (cur_count == 7'b0100011) ? delay_pipeline[71] :
                     (cur_count == 7'b0100100) ? delay_pipeline[73] :
                     (cur_count == 7'b0100101) ? delay_pipeline[75] :
                     (cur_count == 7'b0100110) ? delay_pipeline[77] :
                     (cur_count == 7'b0100111) ? delay_pipeline[79] :
                     (cur_count == 7'b0101000) ? delay_pipeline[81] :
                     (cur_count == 7'b0101001) ? delay_pipeline[83] :
                     (cur_count == 7'b0101010) ? delay_pipeline[85] :
                     (cur_count == 7'b0101011) ? delay_pipeline[87] :
                     (cur_count == 7'b0101100) ? delay_pipeline[89] :
                     (cur_count == 7'b0101101) ? delay_pipeline[91] :
                     (cur_count == 7'b0101110) ? delay_pipeline[93] :
                     (cur_count == 7'b0101111) ? delay_pipeline[95] :
                     (cur_count == 7'b0110000) ? delay_pipeline[97] :
                     (cur_count == 7'b0110001) ? delay_pipeline[99] :
                     (cur_count == 7'b0110010) ? delay_pipeline[101] :
                     (cur_count == 7'b0110011) ? delay_pipeline[103] :
                     (cur_count == 7'b0110100) ? delay_pipeline[105] :
                     (cur_count == 7'b0110101) ? delay_pipeline[107] :
                     (cur_count == 7'b0110110) ? delay_pipeline[109] :
                     (cur_count == 7'b0110111) ? delay_pipeline[111] :
                     (cur_count == 7'b0111000) ? delay_pipeline[113] :
                     (cur_count == 7'b0111001) ? delay_pipeline[115] :
                     (cur_count == 7'b0111010) ? delay_pipeline[117] :
                     (cur_count == 7'b0111011) ? delay_pipeline[119] :
                     (cur_count == 7'b0111100) ? delay_pipeline[121] :
                     (cur_count == 7'b0111101) ? delay_pipeline[123] :
                     (cur_count == 7'b0111110) ? delay_pipeline[125] :
                     (cur_count == 7'b0111111) ? delay_pipeline[127] :
                     (cur_count == 7'b1000000) ? delay_pipeline[129] :
                     (cur_count == 7'b1000001) ? delay_pipeline[131] :
                     (cur_count == 7'b1000010) ? delay_pipeline[133] :
                     (cur_count == 7'b1000011) ? delay_pipeline[135] :
                     (cur_count == 7'b1000100) ? delay_pipeline[137] :
                     (cur_count == 7'b1000101) ? delay_pipeline[139] :
                     (cur_count == 7'b1000110) ? delay_pipeline[141] :
                     (cur_count == 7'b1000111) ? delay_pipeline[143] :
                     (cur_count == 7'b1001000) ? delay_pipeline[145] :
                     (cur_count == 7'b1001001) ? delay_pipeline[147] :
                     (cur_count == 7'b1001010) ? delay_pipeline[149] :
                     (cur_count == 7'b1001011) ? delay_pipeline[151] :
                     (cur_count == 7'b1001100) ? delay_pipeline[153] :
                     (cur_count == 7'b1001101) ? delay_pipeline[155] :
                     (cur_count == 7'b1001110) ? delay_pipeline[157] :
                     (cur_count == 7'b1001111) ? delay_pipeline[159] :
                     (cur_count == 7'b1010000) ? delay_pipeline[161] :
                     (cur_count == 7'b1010001) ? delay_pipeline[163] :
                     (cur_count == 7'b1010010) ? delay_pipeline[165] :
                     (cur_count == 7'b1010011) ? delay_pipeline[167] :
                     (cur_count == 7'b1010100) ? delay_pipeline[169] :
                     (cur_count == 7'b1010101) ? delay_pipeline[171] :
                     (cur_count == 7'b1010110) ? delay_pipeline[173] :
                     (cur_count == 7'b1010111) ? delay_pipeline[175] :
                     (cur_count == 7'b1011000) ? delay_pipeline[177] :
                     (cur_count == 7'b1011001) ? delay_pipeline[179] :
                     (cur_count == 7'b1011010) ? delay_pipeline[181] :
                     (cur_count == 7'b1011011) ? delay_pipeline[183] :
                     (cur_count == 7'b1011100) ? delay_pipeline[185] :
                     (cur_count == 7'b1011101) ? delay_pipeline[187] :
                     (cur_count == 7'b1011110) ? delay_pipeline[189] :
                     (cur_count == 7'b1011111) ? delay_pipeline[191] :
                     (cur_count == 7'b1100000) ? delay_pipeline[193] :
                     (cur_count == 7'b1100001) ? delay_pipeline[195] :
                     (cur_count == 7'b1100010) ? delay_pipeline[197] :
                     delay_pipeline[199];

  //   ------------------ Serial partition # 1 ------------------

  assign product_1_mux = (cur_count == 7'b0000000) ? coeff2 :
                        (cur_count == 7'b0000001) ? coeff4 :
                        (cur_count == 7'b0000010) ? coeff6 :
                        (cur_count == 7'b0000011) ? coeff8 :
                        (cur_count == 7'b0000100) ? coeff10 :
                        (cur_count == 7'b0000101) ? coeff12 :
                        (cur_count == 7'b0000110) ? coeff14 :
                        (cur_count == 7'b0000111) ? coeff16 :
                        (cur_count == 7'b0001000) ? coeff18 :
                        (cur_count == 7'b0001001) ? coeff20 :
                        (cur_count == 7'b0001010) ? coeff22 :
                        (cur_count == 7'b0001011) ? coeff24 :
                        (cur_count == 7'b0001100) ? coeff26 :
                        (cur_count == 7'b0001101) ? coeff28 :
                        (cur_count == 7'b0001110) ? coeff30 :
                        (cur_count == 7'b0001111) ? coeff32 :
                        (cur_count == 7'b0010000) ? coeff34 :
                        (cur_count == 7'b0010001) ? coeff36 :
                        (cur_count == 7'b0010010) ? coeff38 :
                        (cur_count == 7'b0010011) ? coeff40 :
                        (cur_count == 7'b0010100) ? coeff42 :
                        (cur_count == 7'b0010101) ? coeff44 :
                        (cur_count == 7'b0010110) ? coeff46 :
                        (cur_count == 7'b0010111) ? coeff48 :
                        (cur_count == 7'b0011000) ? coeff50 :
                        (cur_count == 7'b0011001) ? coeff52 :
                        (cur_count == 7'b0011010) ? coeff54 :
                        (cur_count == 7'b0011011) ? coeff56 :
                        (cur_count == 7'b0011100) ? coeff58 :
                        (cur_count == 7'b0011101) ? coeff60 :
                        (cur_count == 7'b0011110) ? coeff62 :
                        (cur_count == 7'b0011111) ? coeff64 :
                        (cur_count == 7'b0100000) ? coeff66 :
                        (cur_count == 7'b0100001) ? coeff68 :
                        (cur_count == 7'b0100010) ? coeff70 :
                        (cur_count == 7'b0100011) ? coeff72 :
                        (cur_count == 7'b0100100) ? coeff74 :
                        (cur_count == 7'b0100101) ? coeff76 :
                        (cur_count == 7'b0100110) ? coeff78 :
                        (cur_count == 7'b0100111) ? coeff80 :
                        (cur_count == 7'b0101000) ? coeff82 :
                        (cur_count == 7'b0101001) ? coeff84 :
                        (cur_count == 7'b0101010) ? coeff86 :
                        (cur_count == 7'b0101011) ? coeff88 :
                        (cur_count == 7'b0101100) ? coeff90 :
                        (cur_count == 7'b0101101) ? coeff92 :
                        (cur_count == 7'b0101110) ? coeff94 :
                        (cur_count == 7'b0101111) ? coeff96 :
                        (cur_count == 7'b0110000) ? coeff98 :
                        (cur_count == 7'b0110001) ? coeff100 :
                        (cur_count == 7'b0110010) ? coeff102 :
                        (cur_count == 7'b0110011) ? coeff104 :
                        (cur_count == 7'b0110100) ? coeff106 :
                        (cur_count == 7'b0110101) ? coeff108 :
                        (cur_count == 7'b0110110) ? coeff110 :
                        (cur_count == 7'b0110111) ? coeff112 :
                        (cur_count == 7'b0111000) ? coeff114 :
                        (cur_count == 7'b0111001) ? coeff116 :
                        (cur_count == 7'b0111010) ? coeff118 :
                        (cur_count == 7'b0111011) ? coeff120 :
                        (cur_count == 7'b0111100) ? coeff122 :
                        (cur_count == 7'b0111101) ? coeff124 :
                        (cur_count == 7'b0111110) ? coeff126 :
                        (cur_count == 7'b0111111) ? coeff128 :
                        (cur_count == 7'b1000000) ? coeff130 :
                        (cur_count == 7'b1000001) ? coeff132 :
                        (cur_count == 7'b1000010) ? coeff134 :
                        (cur_count == 7'b1000011) ? coeff136 :
                        (cur_count == 7'b1000100) ? coeff138 :
                        (cur_count == 7'b1000101) ? coeff140 :
                        (cur_count == 7'b1000110) ? coeff142 :
                        (cur_count == 7'b1000111) ? coeff144 :
                        (cur_count == 7'b1001000) ? coeff146 :
                        (cur_count == 7'b1001001) ? coeff148 :
                        (cur_count == 7'b1001010) ? coeff150 :
                        (cur_count == 7'b1001011) ? coeff152 :
                        (cur_count == 7'b1001100) ? coeff154 :
                        (cur_count == 7'b1001101) ? coeff156 :
                        (cur_count == 7'b1001110) ? coeff158 :
                        (cur_count == 7'b1001111) ? coeff160 :
                        (cur_count == 7'b1010000) ? coeff162 :
                        (cur_count == 7'b1010001) ? coeff164 :
                        (cur_count == 7'b1010010) ? coeff166 :
                        (cur_count == 7'b1010011) ? coeff168 :
                        (cur_count == 7'b1010100) ? coeff170 :
                        (cur_count == 7'b1010101) ? coeff172 :
                        (cur_count == 7'b1010110) ? coeff174 :
                        (cur_count == 7'b1010111) ? coeff176 :
                        (cur_count == 7'b1011000) ? coeff178 :
                        (cur_count == 7'b1011001) ? coeff180 :
                        (cur_count == 7'b1011010) ? coeff182 :
                        (cur_count == 7'b1011011) ? coeff184 :
                        (cur_count == 7'b1011100) ? coeff186 :
                        (cur_count == 7'b1011101) ? coeff188 :
                        (cur_count == 7'b1011110) ? coeff190 :
                        (cur_count == 7'b1011111) ? coeff192 :
                        (cur_count == 7'b1100000) ? coeff194 :
                        (cur_count == 7'b1100001) ? coeff196 :
                        (cur_count == 7'b1100010) ? coeff198 :
                        coeff200;
  assign mul_temp = inputmux_1 * product_1_mux;
  assign product_1 = ({{1{mul_temp[31]}}, mul_temp[31:0]} + mul_temp[1])>>>1;

  assign prod_typeconvert_1 = $signed({{8{product_1[31]}}, product_1});

  assign add_signext = prod_typeconvert_1;
  assign add_signext_1 = acc_out_1;
  assign add_temp = add_signext + add_signext_1;
  assign acc_sum_1 = add_temp[39:0];

  assign acc_in_1 = (phase_0 == 1'b1) ? prod_typeconvert_1 :
                   acc_sum_1;

  always @ (posedge clk or posedge reset)
    begin: Acc_reg_1_process
      if (reset == 1'b1) begin
        acc_out_1 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          acc_out_1 <= acc_in_1;
        end
      end
    end // Acc_reg_1_process

  always @ (posedge clk or posedge reset)
    begin: Finalsum_reg_process
      if (reset == 1'b1) begin
        acc_final <= 0;
      end
      else begin
        if (phase_0 == 1'b1) begin
          acc_final <= acc_out_1;
        end
      end
    end // Finalsum_reg_process

  assign output_typeconvert = (acc_final[29:0] + {acc_final[14], {13{~acc_final[14]}}})>>>14;

  always @ (posedge clk or posedge reset)
    begin: Output_Register_process
      if (reset == 1'b1) begin
        output_register <= 0;
      end
      else begin
        if (phase_99 == 1'b1) begin
          output_register <= output_typeconvert;
        end
      end
    end // Output_Register_process

  // Assignment Statements
  assign filter_out = output_register;
endmodule  // Hilbert
