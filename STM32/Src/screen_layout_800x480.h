#ifndef LCD_Layout_800x480_h
#define LCD_Layout_800x480_h
#include "lcd_driver.h"
#if (defined(LAY_800x480))

#include "fonts.h"

typedef const struct
{
	//Top row of status buttons
	const uint16_t TOPBUTTONS_X1;
	const uint16_t TOPBUTTONS_X2;
	const uint16_t TOPBUTTONS_Y1;
	const uint16_t TOPBUTTONS_Y2;
	const uint16_t TOPBUTTONS_WIDTH;
	const uint16_t TOPBUTTONS_HEIGHT;
	const uint16_t TOPBUTTONS_TB_MARGIN;
	const uint16_t TOPBUTTONS_LR_MARGIN;
	const uint16_t TOPBUTTONS_COUNT;
	const uint16_t TOPBUTTONS_PRE_X;
	const uint16_t TOPBUTTONS_PRE_Y;
	const uint16_t TOPBUTTONS_ATT_X;
	const uint16_t TOPBUTTONS_ATT_Y;
	const uint16_t TOPBUTTONS_PGA_X;
	const uint16_t TOPBUTTONS_PGA_Y;
	const uint16_t TOPBUTTONS_DRV_X;
	const uint16_t TOPBUTTONS_DRV_Y;
	const uint16_t TOPBUTTONS_AGC_X;
	const uint16_t TOPBUTTONS_AGC_Y;
	const uint16_t TOPBUTTONS_SECOND_LINE_Y;
	const uint16_t TOPBUTTONS_DNR_X;
	const uint16_t TOPBUTTONS_DNR_Y;
	const uint16_t TOPBUTTONS_NB_X;
	const uint16_t TOPBUTTONS_NB_Y;
	const uint16_t TOPBUTTONS_NOTCH_X;
	const uint16_t TOPBUTTONS_NOTCH_Y;
	const uint16_t TOPBUTTONS_FAST_X;
	const uint16_t TOPBUTTONS_FAST_Y;
	const uint16_t TOPBUTTONS_MUTE_X;
	const uint16_t TOPBUTTONS_MUTE_Y;
	const uint16_t TOPBUTTONS_LOCK_X;
	const uint16_t TOPBUTTONS_LOCK_Y;
	//Clock
	const uint16_t CLOCK_POS_Y;
	const uint16_t CLOCK_POS_HRS_X;
	const uint16_t CLOCK_POS_MIN_X;
	const uint16_t CLOCK_POS_SEC_X;
	const GFXfont *CLOCK_FONT;
	//WIFI
	const uint16_t STATUS_WIFI_ICON_X;
	const uint16_t STATUS_WIFI_ICON_Y;
	//Frequency output
	const uint16_t FREQ_X_OFFSET_100;
	const uint16_t FREQ_X_OFFSET_10;
	const uint16_t FREQ_X_OFFSET_1;
	const uint16_t FREQ_X_OFFSET_KHZ;
	const uint16_t FREQ_X_OFFSET_HZ;
	const uint16_t FREQ_HEIGHT;
	const uint16_t FREQ_WIDTH;
	const uint16_t FREQ_TOP_OFFSET;
	const uint16_t FREQ_LEFT_MARGIN;
	const uint16_t FREQ_RIGHT_MARGIN;
	const uint16_t FREQ_BOTTOM_OFFSET;
	const uint16_t FREQ_BLOCK_HEIGHT;
	const uint16_t FREQ_Y_TOP;
	const uint16_t FREQ_Y_BASELINE;
	const uint16_t FREQ_Y_BASELINE_SMALL;
	const GFXfont *FREQ_FONT;
	const GFXfont *FREQ_SMALL_FONT;
	const uint16_t FREQ_DELIMITER_Y_OFFSET;
	const uint16_t FREQ_DELIMITER_X1_OFFSET;
	const uint16_t FREQ_DELIMITER_X2_OFFSET;
	//Frequency B output
	const uint16_t FREQ_B_LEFT;
	const uint16_t FREQ_B_X_OFFSET_100;
	const uint16_t FREQ_B_X_OFFSET_10;
	const uint16_t FREQ_B_X_OFFSET_1;
	const uint16_t FREQ_B_X_OFFSET_KHZ;
	const uint16_t FREQ_B_X_OFFSET_HZ;
	const uint16_t FREQ_B_HEIGHT;
	const uint16_t FREQ_B_WIDTH;
	const uint16_t FREQ_B_TOP_OFFSET;
	const uint16_t FREQ_B_LEFT_MARGIN;
	const uint16_t FREQ_B_RIGHT_MARGIN;
	const uint16_t FREQ_B_BOTTOM_OFFSET;
	const uint16_t FREQ_B_BLOCK_HEIGHT;
	const uint16_t FREQ_B_Y_TOP;
	const uint16_t FREQ_B_Y_BASELINE;
	const uint16_t FREQ_B_Y_BASELINE_SMALL;
	const GFXfont *FREQ_B_FONT;
	const GFXfont *FREQ_B_SMALL_FONT;
	const uint16_t FREQ_B_DELIMITER_Y_OFFSET;
	const uint16_t FREQ_B_DELIMITER_X1_OFFSET;
	const uint16_t FREQ_B_DELIMITER_X2_OFFSET;
	//Display statuses under frequency
	const uint16_t STATUS_Y_OFFSET;
	const uint16_t STATUS_HEIGHT;
	const uint16_t STATUS_BAR_X_OFFSET;
	const uint16_t STATUS_BAR_Y_OFFSET;
	const uint16_t STATUS_BAR_HEIGHT;
	const uint16_t STATUS_TXRX_X_OFFSET;
	const uint16_t STATUS_TXRX_Y_OFFSET;
	const GFXfont *STATUS_TXRX_FONT;
	const uint16_t STATUS_VFO_X_OFFSET;
	const uint16_t STATUS_VFO_Y_OFFSET;
	const uint16_t STATUS_VFO_BLOCK_WIDTH;
	const uint16_t STATUS_VFO_BLOCK_HEIGHT;
	const uint16_t STATUS_ANT_X_OFFSET;
	const uint16_t STATUS_ANT_Y_OFFSET;
	const uint16_t STATUS_ANT_BLOCK_WIDTH;
	const uint16_t STATUS_ANT_BLOCK_HEIGHT;
	const uint16_t STATUS_TX_LABELS_OFFSET_X;
	const uint16_t STATUS_TX_LABELS_MARGIN_X;
	const uint16_t STATUS_SMETER_WIDTH;
	const uint16_t STATUS_SMETER_MARKER_HEIGHT;
	const uint16_t STATUS_PMETER_WIDTH;
	const uint16_t STATUS_AMETER_WIDTH;
	const uint16_t STATUS_ALC_BAR_X_OFFSET;
	const uint16_t STATUS_LABELS_OFFSET_Y;
	const uint8_t STATUS_LABELS_FONT_SIZE;
	const uint16_t STATUS_LABEL_S_VAL_X_OFFSET;
	const uint16_t STATUS_LABEL_S_VAL_Y_OFFSET;
	const GFXfont *STATUS_LABEL_S_VAL_FONT;
	const uint16_t STATUS_LABEL_DBM_X_OFFSET;
	const uint16_t STATUS_LABEL_DBM_Y_OFFSET;
	const uint16_t STATUS_LABEL_BW_X_OFFSET;
	const uint16_t STATUS_LABEL_BW_Y_OFFSET;
	const uint16_t STATUS_LABEL_RIT_X_OFFSET;
	const uint16_t STATUS_LABEL_RIT_Y_OFFSET;
	const uint16_t STATUS_LABEL_THERM_X_OFFSET;
	const uint16_t STATUS_LABEL_THERM_Y_OFFSET;
	const uint16_t STATUS_LABEL_NOTCH_X_OFFSET;
	const uint16_t STATUS_LABEL_NOTCH_Y_OFFSET;
	const uint16_t STATUS_LABEL_LOCK_X_OFFSET;
	const uint16_t STATUS_LABEL_LOCK_Y_OFFSET;
	const uint16_t STATUS_LABEL_FFT_BW_X_OFFSET;
	const uint16_t STATUS_LABEL_FFT_BW_Y_OFFSET;
	const uint16_t STATUS_SMETER_PEAK_HOLDTIME;
	const uint16_t STATUS_SMETER_TXLABELS_MARGIN;
	const uint16_t STATUS_SMETER_TXLABELS_PADDING;
	const uint16_t STATUS_TX_LABELS_VAL_WIDTH;
	const uint16_t STATUS_TX_LABELS_VAL_HEIGHT;
	const uint16_t STATUS_TX_ALC_X_OFFSET;
	const uint16_t STATUS_MODE_X_OFFSET;
	const uint16_t STATUS_MODE_Y_OFFSET;
	const uint16_t STATUS_MODE_B_X_OFFSET;
	const uint16_t STATUS_MODE_B_Y_OFFSET;
	const uint16_t STATUS_MODE_BLOCK_WIDTH;
	const uint16_t STATUS_MODE_BLOCK_HEIGHT;
	const uint16_t STATUS_ERR_OFFSET_X;
	const uint16_t STATUS_ERR_OFFSET_Y;
	const uint16_t STATUS_ERR_WIDTH;
	const uint16_t STATUS_ERR_HEIGHT;
	const uint16_t STATUS_ERR2_OFFSET_X;
	const uint8_t TEXTBAR_FONT;
	const uint16_t TEXTBAR_TEXT_X_OFFSET;
	//FFT and waterfall
	const uint16_t FFT_HEIGHT_STYLE1;
	const uint16_t WTF_HEIGHT_STYLE1;
	const uint16_t FFT_HEIGHT_STYLE2;
	const uint16_t WTF_HEIGHT_STYLE2;
	const uint16_t FFT_HEIGHT_STYLE3;
	const uint16_t WTF_HEIGHT_STYLE3;
	const uint16_t FFT_PRINT_SIZE;
	const uint16_t FFT_CWDECODER_OFFSET;
	const uint16_t FFT_FFT_MAX_HEIGHT;
	const uint16_t FFT_WTF_MAX_HEIGHT;
	const uint16_t FFT_FFTWTF_POS_Y;
	const uint16_t FFT_FFTWTF_HEIGHT;
	//System menu
	const uint16_t SYSMENU_X1;
	const uint16_t SYSMENU_X2;
	const uint16_t SYSMENU_X2_BIGINT;
	const uint16_t SYSMENU_X2R_BIGINT;
	const uint16_t SYSMENU_W;
	const uint16_t SYSMENU_ITEM_HEIGHT;
	const uint16_t SYSMENU_MAX_ITEMS_ON_PAGE;
	//Stuff
	const uint16_t GREETINGS_X;
	const uint16_t GREETINGS_Y;
	//Tooltip
	const uint16_t TOOLTIP_TIMEOUT;
	const uint16_t TOOLTIP_MARGIN;
	const uint16_t TOOLTIP_POS_X;
	const uint16_t TOOLTIP_POS_Y;
	//bottom buttons
	const uint16_t BOTTOM_BUTTONS_BLOCK_HEIGHT;
	const uint16_t BOTTOM_BUTTONS_BLOCK_TOP;
	const uint16_t BOTTOM_BUTTONS_COUNT;
	const uint16_t BOTTOM_BUTTONS_ONE_WIDTH;
	//Touch buttons layout
	const uint16_t BUTTON_PADDING;
	const float32_t BUTTON_LIGHTER_WIDTH;
	const uint16_t BUTTON_LIGHTER_HEIGHT;
} STRUCT_LAYOUT_THEME;

static const STRUCT_LAYOUT_THEME LAYOUT_THEMES[1] = 
{
	{
	// decoration of screen elements
	// top row of status buttons
	.TOPBUTTONS_X1 = 0,
	.TOPBUTTONS_X2 = (LCD_WIDTH - 1),
	.TOPBUTTONS_Y1 = 95,
	.TOPBUTTONS_Y2 = 55,
	.TOPBUTTONS_COUNT = 10,
	.TOPBUTTONS_HEIGHT = 30,
	.TOPBUTTONS_WIDTH = (LCD_WIDTH / 10), //LCD_WIDTH / TOPBUTTONS_COUNT
	.TOPBUTTONS_PRE_X = 0, //TOPBUTTONS_X1
	.TOPBUTTONS_PRE_Y = 95, //TOPBUTTONS_Y1
	.TOPBUTTONS_ATT_X = (0 + (LCD_WIDTH / 10 * 1)), //TOPBUTTONS_PRE_X + TOPBUTTONS_PRE_W/
	.TOPBUTTONS_ATT_Y = 95, //TOPBUTTONS_Y1
	.TOPBUTTONS_PGA_X = (0 + (LCD_WIDTH / 10 * 2)), //TOPBUTTONS_ATT_X + TOPBUTTONS_ATT_W
	.TOPBUTTONS_PGA_Y = 95, //TOPBUTTONS_Y1
	.TOPBUTTONS_DRV_X = (0 + (LCD_WIDTH / 10 * 3)), //TOPBUTTONS_PGA_X + TOPBUTTONS_PGA_W
	.TOPBUTTONS_DRV_Y = 95, //TOPBUTTONS_Y1
	.TOPBUTTONS_AGC_X = (0 + (LCD_WIDTH / 10 * 4)), //TOPBUTTONS_DRV_X + TOPBUTTONS_DRV_W
	.TOPBUTTONS_AGC_Y = 95, //TOPBUTTONS_Y1
	.TOPBUTTONS_DNR_X = (0 + (LCD_WIDTH / 10 * 5)), //TOPBUTTONS_AGC_X + TOPBUTTONS_AGC_W
	.TOPBUTTONS_DNR_Y = 95, //TOPBUTTONS_Y1
	.TOPBUTTONS_NB_X = (0 + (LCD_WIDTH / 10 * 6)), //TOPBUTTONS_DNR_X + TOPBUTTONS_DNR_W
	.TOPBUTTONS_NB_Y = 95, //TOPBUTTONS_Y1
	.TOPBUTTONS_NOTCH_X = (0 + (LCD_WIDTH / 10 * 7)), //TOPBUTTONS_NB_X + TOPBUTTONS_NB_W
	.TOPBUTTONS_NOTCH_Y = 95, //TOPBUTTONS_Y1
	.TOPBUTTONS_FAST_X = (0 + (LCD_WIDTH / 10 * 8)), //TOPBUTTONS_NOTCH_X + TOPBUTTONS_NOTCH_W
	.TOPBUTTONS_FAST_Y = 95, //TOPBUTTONS_Y1
	.TOPBUTTONS_MUTE_X = (0 + (LCD_WIDTH / 10 * 9)), //TOPBUTTONS_FAST_X + TOPBUTTONS_FAST_W
	.TOPBUTTONS_MUTE_Y = 95, //TOPBUTTONS_Y1
	//clock
	.CLOCK_POS_Y = 17,
	.CLOCK_POS_HRS_X = (LCD_WIDTH - 75),
	.CLOCK_POS_MIN_X = ((LCD_WIDTH - 75) + 25),
	.CLOCK_POS_SEC_X = (((LCD_WIDTH - 75) + 25) + 25),
	.CLOCK_FONT = &FreeSans9pt7b,
	//WIFI
	.STATUS_WIFI_ICON_X = (LCD_WIDTH - 98),
	.STATUS_WIFI_ICON_Y = 3,
	// frequency output VFO-A
	.FREQ_X_OFFSET_100 = 37,
	.FREQ_X_OFFSET_10 = 73,
	.FREQ_X_OFFSET_1 = 113,
	.FREQ_X_OFFSET_KHZ = 170,
	.FREQ_X_OFFSET_HZ = 307,
	.FREQ_HEIGHT = 51,
	.FREQ_WIDTH = 370,
	.FREQ_TOP_OFFSET = 4,
	.FREQ_LEFT_MARGIN = 37,
	.FREQ_RIGHT_MARGIN = (LCD_WIDTH - 37 - 370), //LCD_WIDTH - FREQ_LEFT_MARGIN - FREQ_WIDTH
	.FREQ_BOTTOM_OFFSET = 8,
	.FREQ_BLOCK_HEIGHT = (51 + 4 + 8), //FREQ_HEIGHT + FREQ_TOP_OFFSET + FREQ_BOTTOM_OFFSET
	.FREQ_Y_TOP = 0,
	.FREQ_Y_BASELINE = (0 + 51 + 4), //FREQ_Y_TOP + FREQ_HEIGHT + FREQ_TOP_OFFSET
	.FREQ_Y_BASELINE_SMALL = ((0 + 51 + 4) - 2), //FREQ_Y_BASELINE - 2
	.FREQ_FONT = &FreeSans36pt7b,
	.FREQ_SMALL_FONT = &Quito32pt7b,
	.FREQ_DELIMITER_Y_OFFSET = 0,
	.FREQ_DELIMITER_X1_OFFSET = 151,
	.FREQ_DELIMITER_X2_OFFSET = 289,
	// frequency output VFO-B
	.FREQ_B_LEFT = (LCD_WIDTH - 375), // FREQ_RIGHT_MARGIN +
	.FREQ_B_X_OFFSET_100 = ((LCD_WIDTH - 375) + 37), //FREQ_B_LEFT + 
	.FREQ_B_X_OFFSET_10 = ((LCD_WIDTH - 375) + 73),
	.FREQ_B_X_OFFSET_1 = ((LCD_WIDTH - 375) + 105),
	.FREQ_B_X_OFFSET_KHZ = ((LCD_WIDTH - 375) + 153),
	.FREQ_B_X_OFFSET_HZ = ((LCD_WIDTH - 375) + 268),
	.FREQ_B_HEIGHT = 51,
	.FREQ_B_WIDTH = 288,
	.FREQ_B_TOP_OFFSET = 4,
	.FREQ_B_LEFT_MARGIN = ((LCD_WIDTH - 375) + 37),
	.FREQ_B_RIGHT_MARGIN = (LCD_WIDTH - ((LCD_WIDTH - 375) + 37) - 288), //LCD_WIDTH - FREQ_B_LEFT_MARGIN - FREQ_B_WIDTH
	.FREQ_B_BOTTOM_OFFSET = 8,
	.FREQ_B_BLOCK_HEIGHT = (51 + 4 + 8), //FREQ_B_HEIGHT + FREQ_B_TOP_OFFSET + FREQ_B_BOTTOM_OFFSET
	.FREQ_B_Y_TOP = 0,
	.FREQ_B_Y_BASELINE = (0 + 51 + 4), //FREQ_B_Y_TOP + FREQ_B_HEIGHT + FREQ_B_TOP_OFFSET
	.FREQ_B_Y_BASELINE_SMALL = ((0 + 51 + 4) - 2), //FREQ_B_Y_BASELINE - 2
	.FREQ_B_FONT = &FreeSans32pt7b,
	.FREQ_B_SMALL_FONT = &FreeSans18pt7b,
	.FREQ_B_DELIMITER_Y_OFFSET = 0,
	.FREQ_B_DELIMITER_X1_OFFSET = ((LCD_WIDTH - 375) + 140),
	.FREQ_B_DELIMITER_X2_OFFSET = ((LCD_WIDTH - 375) + 253),
	// display statuses under frequency
	.STATUS_Y_OFFSET = (0 + (51 + 4 + 8) + 1), //FREQ_Y_TOP + FREQ_BLOCK_HEIGHT + 1
	.STATUS_HEIGHT = 30,
	.STATUS_BAR_X_OFFSET = 60,
	.STATUS_BAR_Y_OFFSET = 16,
	.STATUS_BAR_HEIGHT = 10,
	.STATUS_TXRX_X_OFFSET = 3,
	.STATUS_TXRX_Y_OFFSET = -50,
	.STATUS_TXRX_FONT = &FreeSans9pt7b,
	.STATUS_VFO_X_OFFSET = 0,
	.STATUS_VFO_Y_OFFSET = -43,
	.STATUS_VFO_BLOCK_WIDTH = 37,
	.STATUS_VFO_BLOCK_HEIGHT = 22,
	.STATUS_ANT_X_OFFSET = 0,
	.STATUS_ANT_Y_OFFSET = -23,
	.STATUS_ANT_BLOCK_WIDTH = 37,
	.STATUS_ANT_BLOCK_HEIGHT = 22,
	.STATUS_TX_LABELS_OFFSET_X = 5,
	.STATUS_TX_LABELS_MARGIN_X = 55,
	.STATUS_SMETER_WIDTH = 400,
	.STATUS_SMETER_MARKER_HEIGHT = 25,
	.STATUS_PMETER_WIDTH = 300,
	.STATUS_AMETER_WIDTH = 90,
	.STATUS_ALC_BAR_X_OFFSET = 10,
	.STATUS_LABELS_OFFSET_Y = 0,
	.STATUS_LABELS_FONT_SIZE = 1,
	.STATUS_LABEL_S_VAL_X_OFFSET = 10,
	.STATUS_LABEL_S_VAL_Y_OFFSET = 10,
	.STATUS_LABEL_S_VAL_FONT = &FreeSans7pt7b,
	.STATUS_LABEL_DBM_X_OFFSET = 5,
	.STATUS_LABEL_DBM_Y_OFFSET = 20,
	.STATUS_LABEL_BW_X_OFFSET = 470,
	.STATUS_LABEL_BW_Y_OFFSET = 20,
	.STATUS_LABEL_RIT_X_OFFSET = 545,
	.STATUS_LABEL_RIT_Y_OFFSET = 20,
	.STATUS_LABEL_THERM_X_OFFSET = 595,
	.STATUS_LABEL_THERM_Y_OFFSET = 20,
	.STATUS_LABEL_NOTCH_X_OFFSET = 670,
	.STATUS_LABEL_NOTCH_Y_OFFSET = 20,
	.STATUS_LABEL_FFT_BW_X_OFFSET = 740,
	.STATUS_LABEL_FFT_BW_Y_OFFSET = 20,
	.STATUS_LABEL_LOCK_X_OFFSET = 740,
	.STATUS_LABEL_LOCK_Y_OFFSET = 5,
	.STATUS_SMETER_PEAK_HOLDTIME = 1000,
	.STATUS_SMETER_TXLABELS_MARGIN = 55,
	.STATUS_SMETER_TXLABELS_PADDING = 23,
	.STATUS_TX_LABELS_VAL_WIDTH = 25,
	.STATUS_TX_LABELS_VAL_HEIGHT = 8,
	.STATUS_TX_ALC_X_OFFSET = 40,
	.STATUS_MODE_X_OFFSET = (LCD_WIDTH - (LCD_WIDTH - 37 - 370) + 5),
	.STATUS_MODE_Y_OFFSET = -42,
	.STATUS_MODE_B_X_OFFSET = (LCD_WIDTH - (LCD_WIDTH - ((LCD_WIDTH - 375) + 37) - 288) + 5),
	.STATUS_MODE_B_Y_OFFSET = -30,
	.STATUS_MODE_BLOCK_WIDTH = 48,
	.STATUS_MODE_BLOCK_HEIGHT = 22,
	.STATUS_ERR_OFFSET_X = (LCD_WIDTH - 50),
	.STATUS_ERR_OFFSET_Y = 25,
	.STATUS_ERR_WIDTH = 50,
	.STATUS_ERR_HEIGHT = 8,
	.STATUS_ERR2_OFFSET_X = 27,
	//bottom buttons
	.BOTTOM_BUTTONS_BLOCK_HEIGHT = 30,
	.BOTTOM_BUTTONS_BLOCK_TOP = (LCD_HEIGHT - 30), //LCD_HEIGHT - BOTTOM_BUTTONS_BLOCK_HEIGHT
	.BOTTOM_BUTTONS_COUNT = 8,
	.BOTTOM_BUTTONS_ONE_WIDTH = (LCD_WIDTH / 8), //LCD_WIDTH / BOTTOM_BUTTONS_COUNT
	//text bar under wtf
	.TEXTBAR_FONT = 2,
	.TEXTBAR_TEXT_X_OFFSET = 85,
	// FFT and waterfall
	.FFT_HEIGHT_STYLE1 = 140,
	.WTF_HEIGHT_STYLE1 = 180,
	.FFT_HEIGHT_STYLE2 = 160,
	.WTF_HEIGHT_STYLE2 = 160,
	.FFT_HEIGHT_STYLE3 = 220,
	.WTF_HEIGHT_STYLE3 = 100,
	.FFT_PRINT_SIZE = LCD_WIDTH,
	.FFT_CWDECODER_OFFSET = 17,
	.FFT_FFTWTF_POS_Y = (LCD_HEIGHT - 140 - 180 - 30), //LCD_HEIGHT - FFT_HEIGHT_STYLE1 - WTF_HEIGHT_STYLE1 - BOTTOM_BUTTONS_BLOCK_HEIGHT
	.FFT_FFTWTF_HEIGHT = ((LCD_HEIGHT - 140 - 180 - 30) + 140 + 180), //FFT_FFTWTF_POS_Y + FFT_HEIGHT_STYLE1 + WTF_HEIGHT_STYLE1
	//Touch buttons layout
	.BUTTON_PADDING = 1,
	.BUTTON_LIGHTER_WIDTH = 0.4f,
	.BUTTON_LIGHTER_HEIGHT = 4,
	// system menu
	.SYSMENU_X1 = 5,
	.SYSMENU_X2 = 400,
	.SYSMENU_X2_BIGINT = 350,
	.SYSMENU_X2R_BIGINT = 400,
	.SYSMENU_W = 458,
	.SYSMENU_ITEM_HEIGHT = 18,
	},
};

#define LAYOUT_THEMES_COUNT 1
#define MAX_FFT_PRINT_SIZE LCD_WIDTH
#define MAX_FFT_HEIGHT 220
#define MAX_WTF_HEIGHT 180

#endif
#endif
